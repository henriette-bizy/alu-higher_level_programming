The ``7-base_geometry`` module
<<<<<<< HEAD
======================

Using ``BaseGeometry``
-------------------

Importing the function from the module:
        >>> BG = __import__("7-base_geometry").BaseGeometry

Checking for module docstring:
         >>> m = __import__("7-base_geometry").__doc__
         >>> len(m) > 1
         True

Checking for class docstring:
         >>> c = __import__("7-base_geometry").BaseGeometry.__doc__
         >>> len(c) > 1
         True

Checking for method docstring:
	 >>> mod1 = __import__("7-base_geometry").BaseGeometry.area.__doc__
	 >>> len(mod1) > 1
	 True
	 >>> mod2 = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
         >>> len(mod2) > 1
         True

Checking for area failure:
	 >>> b = BG()
	 >>> b.area()
	 Traceback (most recent call last):
	 ...
	 Exception: area() is not implemented

Checking too many arguments for area:
	 >>> b.area(1)
	 Traceback (most recent call last):
         ...
	 TypeError: area() takes 1 positional argument but 2 were given

Checking integer validator for passing integer:
	 >>> b.integer_validator("integer", 1)

Checking for integer == 0:
	 >>> b.integer_validator("integer", 0)
	 Traceback (most recent call last):
         ...
         ValueError: integer must be greater than 0

Checking for integer < 0;
	 >>> b.integer_validator("integer", -5)
	 Traceback (most recent call last):
         ...
         ValueError: integer must be greater than 0

Checking for non-integer types:
	 >>> b.integer_validator("bool", True)
	 Traceback (most recent call last):
         ...
         TypeError: bool must be an integer
	 >>> b.integer_validator("float", 1.5)
         Traceback (most recent call last):
         ...
         TypeError: float must be an integer
	 >>> b.integer_validator("complex", complex(1, 1))
         Traceback (most recent call last):
         ...
         TypeError: complex must be an integer
	 >>> b.integer_validator("string", "hello")
         Traceback (most recent call last):
         ...
         TypeError: string must be an integer
	 >>> b.integer_validator("tuple", (1, 2))
         Traceback (most recent call last):
         ...
         TypeError: tuple must be an integer
	 >>> b.integer_validator("list", [1, 2, 3])
	 Traceback (most recent call last):
         ...
         TypeError: list must be an integer
	 >>> b.integer_validator("dict", {"key": "value"})
         Traceback (most recent call last):
         ...
         TypeError: dict must be an integer
	 >>> b.integer_validator("set", {"hello", "world"})
         Traceback (most recent call last):
         ...
         TypeError: set must be an integer
	 >>> b.integer_validator("frozenset", frozenset(["hello", "world"]))
         Traceback (most recent call last):
         ...
         TypeError: frozenset must be an integer
	 >>> b.integer_validator("bytes", b"bytes")
         Traceback (most recent call last):
         ...
         TypeError: bytes must be an integer
	 >>> b.integer_validator("bytearrays", bytearray(b"bytes"))
         Traceback (most recent call last):
         ...
         TypeError: bytearrays must be an integer

Checking for no arguments to integer_validator:
	 >>> b.integer_validator()
	 Traceback (most recent call last):
         ...
	 TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Checking for only 1 argument to integer_validator:
	 >>> b.integer_validator("integer")
	 Traceback (most recent call last):
         ...
	 TypeError: integer_validator() missing 1 required positional argument: 'value'

Checking for too many arguments:
	 >>> b.integer_validator("integer", 1, 2)
	 Traceback (most recent call last):
         ...
	 TypeError: integer_validator() takes 3 positional arguments but 4 were given
=======
==============================

Using ``BaseGeometry``
----------------------

Importing class from the module:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


Trying to print the area
    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
          ...
    Exception: area() is not implemented


Trying to pass a non-integer argument
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", "5")
    Traceback (most recent call last):
          ...
    TypeError: name must be an integer


Trying to pass a boolean value
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", True)
    Traceback (most recent call last):
          ...
    TypeError: name must be an integer


Trying to pass a negative value
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", -5)
    Traceback (most recent call last):
          ...
    ValueError: name must be greater than 0


Trying to pass a zero value
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 0)
    Traceback (most recent call last):
          ...
    ValueError: name must be greater than 0


Passing a positive value
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 5)


Passing one argument to integer_validator
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name")
    Traceback (most recent call last):
          ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

Integer_validator with no arguments
    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    Traceback (most recent call last):
          ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'


Passing three arguments to integer_validator
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 1, 2)
    Traceback (most recent call last):
          ...
    TypeError: integer_validator() takes 3 positional arguments but 4 were given


Passing one argument to area method
    >>> bg = BaseGeometry()
    >>> bg.area(5)
    Traceback (most recent call last):
          ...
    TypeError: area() takes 1 positional argument but 2 were given

Passing two arguments to area method
    >>> bg = BaseGeometry()
    >>> bg.area(5, 5)
    Traceback (most recent call last):
          ...
    TypeError: area() takes 1 positional argument but 3 were given

Passing tuple to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", (4,))
    Traceback (most recent call last):
          ...
    TypeError: age must be an integer


Passing list to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", [3])
    Traceback (most recent call last):
          ...
    TypeError: age must be an integer


Passing dict to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", {3, 4})
    Traceback (most recent call last):
              ...
    TypeError: age must be an integer


Passing None to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
              ...
    TypeError: age must be an integer
>>>>>>> 7f1687829a3748d861ca00bc849ca9324470e555
